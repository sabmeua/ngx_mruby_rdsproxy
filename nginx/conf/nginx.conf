daemon off;
user daemon;
worker_processes auto;
events {
    worker_connections  1024;
}
http {
    include           mime.types;
    default_type      application/octet-stream;
    sendfile          on;
    keepalive_timeout 65;
}
stream {
    error_log /dev/stdout debug;

    upstream pgservers {
        server 127.0.0.1:5432; #dummy
    }

    mruby_stream_init_code '
      u = Userdata.new
      u.server_map = JSON::parse open("/usr/local/nginx/conf/server_map.json").read
      u.backups = u.server_map["backup"].map{|e| e["endpoint"]}
    ';

    server {
        listen 5432;
        mruby_stream_code '
          u = Userdata.new
          upstreams = JSON::parse Redis.new("redis", 6379).get("upstreams")
          c = Nginx::Stream::Connection.new "pgservers"
          c.upstream_server = upstreams.length > 0 ?
            upstreams[rand upstreams.length] : u.backups[rand u.backups.length]
        ';
        proxy_pass pgservers;
    }
}

